import osimport csvimport routine#from collections import OrderedDictfrom itertools import islicefrom my_classes import GazeReader# This Jussi's script converts eyetracking data in txt-format to gazedata-format# It also converts X- and Y- coordinates to relative values for screen size.# Input folder needs to be relative to the script location in the folder tree.# In this case the computer(!) where this script is located needs to have a folder# named 'testing 7mo,trec2' where the files are located.# VERSION IS 1st TO ADOPT ObjectOriented programming of our gazedata scriptsinput_folder = 'testing 7mo,trec2' #"C:\\Users\\Public\\Documents\\Tampereen yliopisto\\Eye tracker\\TRE Cohort 2\\gazeAnalysisLib analyses\\testing 7mo,trec2"#input_folder = folder = "C:\Users\Public\Documents\Tampereen yliopisto\Eye tracker\TRE Cohort 2\gazeAnalysisLib analyses\7mo,trec2"n_files = 1 # set limit for files to be processed, None if no limit desiredoutput_folder = "C:\\Users\\Public\\Documents\\Tampereen yliopisto\\Eye tracker\\TRE Cohort 2\\gazeAnalysisLib analyses\\testing data"os.makedirs(output_folder,exist_ok=True)file_ext = ".gazedata" #input file extension, .txtoutput_file_ext = ".gazedata"input_file_delimiter = "\t"output_file_delimiter = input_file_delimiterheaders_folder = os.getcwd() #path for headers inputfileheaders_inputfile = "headers_tre_5mo_to_7mo.txt"#map for one type of "gazedata" (or txt) headers, values may not apply to all gazedata map_header = routine.get_headers(headers_folder, headers_inputfile)# find directory by "walking" through the systemfor root, dirs, files in os.walk('C:\\Users\\'):        if input_folder in root:                  print(root, " ", end=" FOUND! ")                print("")                input_folder = root        print (input_folder)##        # list files in a directory, diritems = os.listdir(input_folder)print ("Directory contains " + str(len(diritems)) + " files.")#loop through files, limit loop by isslice(items, start, stop), can be Nonefor filenum, file in islice(enumerate(diritems), 0, n_files):     #print ("Checking file " + str(filenum + 1) + '/' + str(len(diritems)))    if file.endswith(file_ext):        print ("Process file " + str(filenum + 1) + '/' + str(len(diritems)))        print(file)        #read in data, process, and strore in newrows        args_pro = input_folder, file, map_header                        # make new GazeReader object for reading and processing input file                 f_processor = GazeReader(args_pro, 40) #40 is optional limit for rows                f_processor.set_row_limit(40) # limit rows, good for debugging                        print("Newrows length: " + str(f_processor.get_row_count()))                # output file formation        # resolve the output file name        input_filename_parts = file.split(".") #input_file.split(".")        output_file = input_filename_parts[0] + output_file_ext        # open output file        with open(os.path.join(output_folder, output_file), "wt") as outputfile:            writer = csv.writer(outputfile, delimiter=output_file_delimiter)            # write header row            writer.writerow(f_processor.get_headers())                        # write datarows, until there are none left            newrow = True            while newrow:                                newrow = f_processor.get_new_row()                                if (newrow):                                    writer.writerow(newrow)                                    print (" File processed.")                        #    else:        #print (" Filename did not match the file_ext -> did nothing.")