import osimport csvimport routine#from collections import OrderedDictfrom itertools import islice# This Jussi's script converts eyetracking data in txt-format to gazedata-format# It also converts X- and Y- coordinates to relative values for screen size.# Input folder needs to be relative to the script location in the folder tree.# In this case the folder where this script is located needs to have a folder# named "files_to_change" where the files are located.input_folder = folder = "testing 7mo,trec2" #"C:\\Users\\Public\\Documents\\Tampereen yliopisto\\Eye tracker\\TRE Cohort 2\\gazeAnalysisLib analyses\\testing 7mo,trec2"#input_folder = folder = "C:\Users\Public\Documents\Tampereen yliopisto\Eye tracker\TRE Cohort 2\gazeAnalysisLib analyses\7mo,trec2"output_folder = "C:\\Users\\Public\\Documents\\Tampereen yliopisto\\Eye tracker\\TRE Cohort 2\\gazeAnalysisLib analyses\\testing data"os.makedirs(output_folder,exist_ok=True)#if ~os.path.isdir(output_folder):    file_ext = ".gazedata" #input file extension, .txtoutput_file_ext = ".gazedata"input_file_delimiter = "\t"output_file_delimiter = input_file_delimiterheaders_folder = os.getcwd() #path for headers inputfileheaders_inputfile = "headers_tre_5mo_to_7mo.txt"#map for one type of "gazedata" (or txt) headers, values may not apply to all gazedata map_header = routine.get_headers(headers_folder, headers_inputfile)# find directory by "walking" through the systemfor root, dirs, files in os.walk('C:\\Users\\'):        if input_folder in root:                  print(root, " ", end=" FOUND! ")                print("")                input_folder = root        print (input_folder)# list files in a directorydiritems = os.listdir(input_folder)print ("Directory contains " + str(len(diritems)) + " files.")#loop through files, limit loop by isslice(items, start, stop)for filenum, file in islice(enumerate(diritems), 0, 1):     #print ("Checking file " + str(filenum + 1) + '/' + str(len(diritems)))    if file.endswith(file_ext):        print ("Process file " + str(filenum + 1) + '/' + str(len(diritems)))        print(file)        #read in data, process, and strore in newrows        args_pro = input_folder, file, map_header                newrows, newheaders = routine.file_process(args_pro)        #print (str(newrows))        print("newrows length: " + str(len(newrows)))        # output file formation        # resolve the output file name        input_filename_parts = file.split(".") #input_file.split(".")        output_file = input_filename_parts[0] + output_file_ext                # open file                with open(os.path.join(output_folder, output_file), "wt") as outputfile:            writer = csv.writer(outputfile, delimiter=output_file_delimiter)            # write header row            writer.writerow(newheaders)                        # write datarows            for newrow in newrows:                writer.writerow(newrow)            print (" File processed.")#    else:        #print (" Filename did not match the file_ext -> did nothing.")