-You can find folders by "walking" thourgh directories
 *"starting point", e.g., 'C:\\Users\\'
 *find match "if folder in root", where folder is a variable(string) name
 *code: for root, dirs, files in os.walk('C:\\Users\\'):
     
     if folder in root:      
     
         print(root, " ", end=" FOUND! ")
 
 
23.5.3027
-object oriented gazedata reading and processing
*class defined in my_classes.py
*gazedataOO_0.2.py uses the GazeReader from my_classes

 
24.5.2017
-I created a new GitHub repository for Python gazedata analyses
*it can be "cloned" to laptop local folder on Git commandline by:
 git clone git://github.com/yrttiahoS/py_gazedat
 **saves to: C:\Users\infant\Documents\GitHub\py_gazedat
 **command has repository's URL, but string "https" is omitted
 **see also: http://stackoverflow.com/questions/651038/how-do-you-clone-a-git-repository-into-a-specific-folder
 
-headers used in different gazedata formats are listen in: headers_in_sites.xlxs
*headers for mi? 
 	try finding with check_headers.py
 
26.5.2017
-check_headers.py now works
*I analyxe mi headers

-I made object oriented style header cheking and expanded my_classes with
 class DataFolder



29.5.2017
-explain headers in:
C:\Users\Public\Documents\Tampereen yliopisto\Eye tracker\Aaltonen17\headers_in_sites.xlsx
*tobii-pro-studio-user-manual.pdf, p: 144


-find data values with: check_dataOO_0.1.py

30.5.2017
-I expanded my_classes and routine
-I made a working version of check_dataOO_0.1.py

-Include -1.#QNAN and 1.#QNAN to "null values"


21.6.2017
-check_dataOO_0.1.py and DataFolder.write_stats_to_file() still output too 
 many values as statistics (should be min,max or list of strings)
*it interprets numerical values as strings and thus "cannot" extract min,max
*-1.#QNAN and 1.#QNAN were not included in "null value" list, 
  try running script now with this improvement, does work:?	

#about_68
Disengagement273-320-289-1.gazedata, has strings in 
	XGazePosRightEye
	Reason: last datacolumn ID=61353, 
		is incomplete and has "-" instead of numerical value for this col
	Solutions:
		a) read/convert "-" to null
		b) don't read incomplete data rows, in myclasses.GazeReader
		try: #try to accces data element    
                        foo = row[ncol]    
                    except(IndexError): #if index oob, use element of previuous row    
                        break #break out from incomplete row		
		EDIT 28.6.2017: 
			*breaking from IndexError was not used in method: _odictionarize_data(self)
			*it was only used in method: read_data
			*now, update also _odictionarize_data...
			

#about_19
Disengagement-223-1.gazedata, has strings in 
	DistanceRightEye
	Reason: last datacolumn ID=61353, 
		is incomplete and has "-" instead of numerical value for this col

-I chose to include "-" in the list of "null" values
-for extractinf gazedata min,max and string lists for all headers,
	the code should now work for treC2data!
	*run next time, with check_dataOO_0.1 
-save all to gitcloud
	*also copied to C:\Users\infant\Documents\GitHub\archive\py_gazedat_21.6.2017

22.6.2017
-I ran code check_dataOO_0.1 to get datavalues in "tre5mo_old" data
*code ran through ok
*values contained some crude outliers that mask the range of more "typical values"
	**outliers probably larger than 99. percentile?
*I updated the my_classes.GazeReader.get_data_stats 
	**now uses numpy.percentile(n , p)
	**percentiles now also in GazeReader constructor i.e., init()
	**percentiles passed from check_dataOO_0.1 to Datafolder.write_stats_to_file(p) to GazeReader.init()
*try...works	

-ran check_dataOO_0.1 on tre5mo_old, time 0:14:07.518289
-ran check_dataOO_0.1 on tre7mo_old, time 0:14:39.264345


26.6.2017
-how to run check_dataOO_0.1 on malawi data, where headers missing in some files?
	**update GazeReader to check if string headers can be found
		if not, throw exception, 
			no exception, just return empty list [] for headers missing
 		handle exceptions in DataFolder?
			no need? DataFolder loops through headers, if no headers -> nothing done?
		you can analyze files without headers later, when new versions with headers are made...
			good idea, headless ;) data found in headers in mi_26.6.2017.txt
*I completed the above updates into my_classes.py (GazeReader class)

-ran check_dataOO_0.1 on mi, time 0:39:04.459314

27.6.2016
-the class DataFolders can write statistics to file with write_stats_to_file(self, percentiles), 
 but it would be useful to have get method(s) for acquiring stats from the object
*don't return all, instead return classy one "scalar" at time,
 all headers could be returned as a "catalogue" or "list of contents"...
*OK: I made these updates into my_classes

-make script that output folder level stats from many folders
*name: check_data_multi.py
*uses class DataFolder like check_dataOO_0.1 

28.6.2017
-there were some problems with tre24mo data, with GazeReader and DataFolders,
 because some headers or data were empty []
*I fixed with returnings from methods or continue of loop in such cases
*program ran through

-there is some problem with output file: ValueError: I/O operation on closed file.
*check_data_multi.py", line 53
*opening, closing, and writing csv: improve these things!
*EDIT 29.6.2017, this bug fixed
	**now outputfile is opened and closed "raw", ie., not using "with" or "try"

29.6.2017
-I now have version of check_data_multi.py, which runs through with limited
 data input (rowlimit)
*try running with all data now!
*check_data_multi now ran through, in 1:48, hours:minutes
*output moved to C:\Users\Public\Documents\Tampereen yliopisto\Eye tracker\Aaltonen17\py_stats

-excel file for comparing headers and stats from different folders
*Headers and data in sites.xlsx
*e.g., compare "old" and "new" data from 5mo,24mo TRE

-some folders had "crazy" data:
tre24mo_old and new:	UserDefined_1	Stim TrialId	Target
ct_6mo: all vars!
ct_18mo: all vars!
hki:	nudged_transform_l (string, while should be numerical), stim (numerical data, what pictures?)
*in ct, Cape Town, data there are empty values 
	**empty values cause immediately expection in data acquisition,
	**this is handled harshely with "break", 
		thus if file starts with empty data, nothing will be read!
	**try a more flexible appoarch, eg., just "continue" to next row
		***still softer/flexible is to assign empty [] if no data could be read
		***"assign empty" works
*now that "bug" - stop data acquisition - is fixed, run stats on tre24mo and ct data
*Warning (from warnings module):
  	File "C:\Python Spyder\python-3.5.3.amd64\lib\site-packages\numpy\lib\function_base.py", line 3834
	    RuntimeWarning)
	RuntimeWarning: Invalid value encountered in percentile
**this didn't stop RUN though!

-stats extracted 
*outfiles now in: C:\Users\Public\Documents\Tampereen yliopisto\Eye tracker\Aaltonen17\py_stats
*script: check_data_multi.py
*input folders
	folders['tre24mo_old'] = "C:\\Users\\Public\\Documents\\Tampereen yliopisto\\Eye tracker\\TRE Cohort 2\\gazeAnalysisLib analyses\\24mo, trec2"
	folders['tre24mo_new'] = "D:\\lasayr\\Aaltonen\\24mo"
	folders['ct_6mo'] = "D:\\lasayr\\Aaltonen\\ct\\6mo"
	folders['ct_18mo'] = "D:\\lasayr\\Aaltonen\\ct\\18mo"
*results now make sense, and are not blocked by break or continue statements

